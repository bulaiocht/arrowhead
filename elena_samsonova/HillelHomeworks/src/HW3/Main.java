package HW3;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    public static void main(String[] args) {

        //    1) Найти любое четырехбуквенное слово в тексте, Собрать все такие слова.
        String text = "I solemnly swear that i am up to no good";
        String regex = "\\b[a-zA-Z]{4}\\b";
        search(text, regex);


        //    2) Выбрать из текста идентификаторы сотрудников, которые отвечают следующим критериям:
//    - начинаются с 2 чисел (без ведущего нуля), потом 3 числа (с возможным ведущим нулем),
//          потом еще 3 числа (с возможным ведущим нулем), разделенные пробелами.
//    - начинаются с 3 чисел (без ведущего нуля), потом 3 числа (с возможным ведущим нулем),
//          потом еще 3 числа (с возможным ведущим нулем), разделенные пробелами.
//    - числа выходящие за границы 10 000 000 и150 000 000 не валидны.
//    Валидные примеры: 11 304 982, 39 683 234, 139 920 393, 150 000 000
//    Невалидные примеры: 153 349 111, 053 394 111, 3 394 234, 89 909 98

        String text2 = "Валидные примеры: 11 304 982, 39 683 234, 139 920 393, 150 000 000\n" +
                "//    Невалидные примеры: 153 349 111, 053 394 111, 3 394 234, 89 909 98";
        String regex2 = "(([^0-9]{1}[1-9]{1}[0-9]{1})|([1]{1}[0-4]{1}[0-9]{1})|([1]{1}[5]{1}[0]{1}))(\\s{1}[0-9]{3}\\s{1}[0-9]{3})";
        search(text2, regex2);
    }


    public static void search(String text, String regex) {

        StringBuilder str = new StringBuilder();
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(text);

        while (matcher.find()) {
            str.append(matcher.group());
            str.append("; ");

        }

        System.out.println(str);

    }


//    2) Выбрать из текста идентификаторы сотрудников, которые отвечают следующим критериям:
//    - начинаются с 2 чисел (без ведущего нуля), потом 3 числа (с возможным ведущим нулем),
//          потом еще 3 числа (с возможным ведущим нулем), разделенные пробелами.
//    - начинаются с 3 чисел (без ведущего нуля), потом 3 числа (с возможным ведущим нулем),
//          потом еще 3 числа (с возможным ведущим нулем), разделенные пробелами.
//    - числа выходящие за границы 10 000 000 и150 000 000 не валидны.
//    Валидные примеры: 11 304 982, 39 683 234, 139 920 393, 150 000 000
//    Невалидные примеры: 153 349 111, 053 394 111, 3 394 234, 89 909 98

}
